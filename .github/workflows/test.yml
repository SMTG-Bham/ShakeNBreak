name: Tests

on:
  push:
    branches:
      - '*'  # all branches

  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false

      matrix:
        os: [ ubuntu-latest, macos-14 ]
        python-version: [ '3.9', '3.10', '3.11' ]
        exclude:
          - os: macos-14
            python-version: '3.9'  # Exclude Python 3.9 on macOS, not supported for macOS-14 tests
        # macos-latest should be 14 according to link below, but currently doesn't?
        # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-public-repositories

    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[tests]

      - name: Check package versions
        run: |
          pip show -V pymatgen-analysis-defects
          pip show -V pymatgen
          pip show -V pytest
          pip show -V doped

      - name: Test
        run:  |
          pytest -vv -m "not mpl_image_compare" tests  # all non-plotting tests

      - name: Plotting Tests
        if: always()  # run even if non-plotting tests fail
        id: plotting_tests  # Add an ID to this step for reference
        run: |
          pytest --mpl -m "mpl_image_compare" tests/test_plotting.py  # plotting tests
          pytest --mpl -m "mpl_image_compare" tests/test_shakenbreak.py  # plotting tests

      - name: Generate GH Actions test plots
        if: failure() && steps.plotting_tests.outcome == 'failure'  # Run only if plotting tests fail
        run: |
          # Generate the test plots in case there were any failures:
          pytest --mpl-generate-path=tests/remote_baseline -m "mpl_image_compare" tests/test_plotting.py
          pytest --mpl-generate-path=tests/remote_baseline -m "mpl_image_compare" tests/test_shakenbreak.py

      # Upload test plots
      - name: Archive test plots
        if: always()  # always upload the plots, even if the tests fail
        uses: actions/upload-artifact@v4
        with:
          name: output-plots
          path: tests/remote_baseline
