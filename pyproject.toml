[build-system]
requires = [
    "setuptools>=42",
    "wheel"
]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 107

[tool.ruff]
line-length = 107
lint.pydocstyle.convention = "google"
lint.isort.split-on-trailing-comma = false
lint.select = [  # from pymatgen
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "D",   # pydocstyle
  "E",   # pycodestyle error
  "EXE", # flake8-executable
  "F",   # pyflakes
  "FLY", # flynt
  "I",   # isort
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "PD",  # pandas-vet
  "PIE", # flake8-pie
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "PYI", # flakes8-pyi
  "Q",   # flake8-quotes
  "RET", # flake8-return
  "RSE", # flake8-raise
  "RUF", # Ruff-specific rules
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TID", # tidy imports
  "TID", # flake8-tidy-imports
  "UP",  # pyupgrade
  "W",   # pycodestyle warning
  "YTT", # flake8-2020
]
lint.ignore = [
  "B028",    # No explicit stacklevel keyword argument found
  "D101",    # Missing docstring in public class (docstring in init instead)
  "D200",    # One-line docstring should fit on one line with quotes
  "D205",    # 1 blank line required between summary line and description
  "D212",    # Multi-line docstring summary should start at the first line
  "PLR2004", # Magic number
  "PLR",     # pylint refactor
  "W605",    # Invalid escape sequence
  "PT011",   # too broad pytest.raises()
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D102"]
